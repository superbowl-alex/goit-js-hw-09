{"mappings":"iiBACA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,OAzCM,CACXO,KAAMC,SAASC,cAAc,SAC7BT,MAAOQ,SAASC,cAAc,sBAC9BC,KAAMF,SAASC,cAAc,qBAC7BE,OAAQH,SAASC,cAAc,yBAI5BF,KAAKK,iBAAiB,UAG3B,SAAsBC,GACpBA,EAAEC,iBAKF,IAJA,IAEmBC,EAAfF,EAAEG,cADJC,SAAYC,EAAKH,EAALf,MAAOU,EAAIK,EAAJL,KAAMC,EAAMI,EAANJ,OAEvBQ,GAAgBD,EAAME,MACjBC,EAAI,EAAGA,IAAMV,EAAOS,MAAOC,IAClCvB,EAAcuB,EAAGF,GACdG,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,M,OACjBwB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,UAGjD4B,OAAM,SAAAL,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,M,OAClBwB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,UAEvEmB,IAAiBT,EAAKU,S","sources":["src/js/03-promises.js"],"sourcesContent":["// import required packages\nimport Notiflix from 'notiflix';\n\n// create references to dom elements\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay]'),\n  step: document.querySelector('input[name=\"step]'),\n  amount: document.querySelector('input[name=\"amount]'),\n};\n\n// add an eventListener to the submit form\nrefs.form.addEventListener('submit', onFormSubmit);\n\n// function that works on form submit\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  let currentDelay = +delay.value;\n  for (let i = 1; i <= +amount.value; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) =>\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        )\n      )\n      .catch(({ position, delay }) =>\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n    currentDelay += +step.value;\n  }\n}\n\n// function that creates and returns a promise\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","form","document","querySelector","step","amount","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","currentDelay","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.0abab678.js.map"}