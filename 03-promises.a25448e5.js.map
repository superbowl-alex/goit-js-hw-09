{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,MAEpBA,OAzCM,CACXO,KAAMC,SAASC,cAAc,SAC7BT,MAAOQ,SAASC,cAAc,sBAC9BC,KAAMF,SAASC,cAAc,qBAC7BE,OAAQH,SAASC,cAAc,yBAI5BF,KAAKK,iBAAiB,UAG3B,SAAsBC,GACpBA,EAAEC,iBACF,MACEC,UAAYf,MAAAgB,EAAKN,KAAEA,EAAIC,OAAEA,IACvBE,EAAEI,cACN,IAAIC,GAAgBF,EAAMG,MAC1B,IAAK,IAAIC,EAAI,EAAGA,IAAMT,EAAOQ,MAAOC,IAClCtB,EAAcsB,EAAGF,GACdG,MAAK,EAACtB,SAAEA,EAAQC,MAAEA,KACjBsB,EAAA1B,GAAS2B,OAAOC,QACd,uBAAqBzB,QAAiBC,SACrCyB,OAEJ,EAAO1B,WAAUC,WAChBsB,EAAA1B,GAAQ2B,OAACG,QAAO,sBAAS3B,QAA8BC,SAE3DkB,IAAiBR,EAAKS","sources":["src/js/03-promises.js"],"sourcesContent":["// import required packages\nimport Notiflix from 'notiflix';\n\n// create references to dom elements\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay]'),\n  step: document.querySelector('input[name=\"step]'),\n  amount: document.querySelector('input[name=\"amount]'),\n};\n\n// add an eventListener to the submit form\nrefs.form.addEventListener('submit', onFormSubmit);\n\n// function that works on form submit\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = e.currentTarget;\n  let currentDelay = +delay.value;\n  for (let i = 1; i <= +amount.value; i++) {\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) =>\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        )\n      )\n      .catch(({ position, delay }) =>\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n      );\n    currentDelay += +step.value;\n  }\n}\n\n// function that creates and returns a promise\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","form","document","querySelector","step","amount","addEventListener","e","preventDefault","elements","delay1","currentTarget","currentDelay","value","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.a25448e5.js.map"}